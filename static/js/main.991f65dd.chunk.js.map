{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","className","alt","src","width","height","CardList","robots","cardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","Searchfield","target","value","fetch","then","response","json","users","robotsFilter","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAyBeA,EAbF,SAACC,GACb,IAAOC,EAAiBD,EAAjBC,GAAGC,EAAcF,EAAdE,KAAKC,EAASH,EAATG,MACf,OACC,sBAAKC,UAAU,4DAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,QAAoCM,MAAM,MAAMC,OAAO,QAC5E,sBAAKJ,UAAU,QAAf,UACA,6BAAKF,IACL,4BAAIC,WCGQM,EAnBE,SAACT,GACjB,IAAMU,EAASV,EAAMU,OACfC,EAAYD,EAAOE,KAAI,SAACC,EAAKC,GAClC,OACC,cAAC,EAAD,CAEAb,GAAIS,EAAOI,GAAGb,GACdC,KAAMQ,EAAOI,GAAGZ,KAChBC,MAAOO,EAAOI,GAAGX,OAHZW,MAOP,OACC,8BACEH,KCFWI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,8BACC,uBACAZ,UAAU,gCACVa,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCCAI,EARA,SAACpB,GACf,OACC,sBAAKqB,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBf,OAAO,SAAlE,UACER,EAAMwB,SADR,QCkBaC,E,kDAnBd,WAAYzB,GAAO,IAAD,8BACjB,cAAMA,IACD0B,MAAQ,CACZC,UAAW,GAHK,E,qDAMlB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAE3B,WACC,OAAGG,KAAKJ,MAAMC,SACN,+DAGAG,KAAK9B,MAAMwB,a,GAfOQ,aCuDbC,E,kDA/Cb,aAAc,IAAD,8BACX,gBAeFC,eAAiB,SAACC,GAEhB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAhBzC,EAAKZ,MAAQ,CACXhB,OAAS,GACT0B,YAAc,IAJL,E,qDAOb,WAAoB,IAAD,OACjBG,MAAM,4CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKZ,SAAS,CAACrB,OAASiC,S,oBAQ5B,WAAS,IAAD,OACAC,EAAed,KAAKJ,MAAMhB,OAAOmC,QAAO,SAAAC,GAC5C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAElE,OAAgC,IAA7BjB,KAAKJ,MAAMhB,OAAOuC,OAEjB,oBAAI7C,UAAU,KAAd,0BAKE,sBAAKA,UAAU,KAAf,UACE,6BAAI,sBAAMA,UAAU,WAAhB,2BAEJ,cAAC,EAAD,CAAWY,aAAcc,KAAKI,iBAC9B,uBACA,cAAC,EAAD,CAAQ9B,UAAU,WAAlB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUM,OAAQkC,e,GAxChBZ,aCGHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.991f65dd.chunk.js","sourcesContent":["// import React, {Component} from 'react';\n\n// class Card extends Component{\n// \trender(){\n// \t\treturn(\n// \t\t\t<div className='f1 tc'>\n// \t\t\t\t<h1>Hello World!</h1>\n// \t\t\t\t<p>{this.props.greetings}</p>\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\nconst Card = (props) =>{\n\tconst {id,name,email} = props;\n\treturn(\n\t\t<div className='tc bg-black dib br3 pa3 ma2 grow bw2 shadow-5 ba b--green'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?5x5`} width=\"250\" height=\"200\"/>\n\t\t\t<div className='white'>\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = (props) => {\n\tconst robots = props.robots;\n\tconst cardArray = robots.map((user,i)=>{\n\t\treturn (\n\t\t\t<Card\n\t\t\tkey={i} \n\t\t\tid={robots[i].id} \n\t\t\tname={robots[i].name} \n\t\t\temail={robots[i].email}\n\t\t\t/>\n\t\t);\n\t})\n\treturn(\n\t\t<div>\n\t\t\t{cardArray}\n    \t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({searchChange}) => {\n\treturn(\n\t\t<div>\n\t\t\t<input\n\t\t\tclassName='pa3 ba b--red bg-light-silver' \n\t\t\ttype='search' \n\t\t\tplaceholder='Search Robots'\n\t\t\tonChange = {searchChange} // will call onSearchChange function in App.js on any change in serach box.\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn(\n\t\t<div style={{overflowY:'scroll', border:'5px solid black', height:'700px'}}>\n\t\t\t{props.children};\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError : false\n\t\t}\n\t}\n\tcomponentDidCatch(error,info){\n\t\tthis.setState({hasError : true})\n\t}\n\trender(){\n\t\tif(this.state.hasError){\n\t\t\treturn <h1> Oops!! Something is Broken! </h1>\n\t\t}\n\t\telse{\n\t\t\treturn this.props.children\n\t\t}\n\t}\n}\n\nexport default ErrorBoundary;","// import logo from './logo.svg';\n// import './App.css';\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary'\n// import { robots } from './robots';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      robots : [],\n      Searchfield : ''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.cypress.io/users')\n    .then(response => {\n      return response.json();\n    })\n    .then(users => {\n      this.setState({robots : users});\n    })\n  }\n  onSearchChange = (event) => {\n    // console.log(event.target.value);\n    this.setState({Searchfield: event.target.value}) //setting state of Searchfield\n  }\n\n  render(){\n    const robotsFilter = this.state.robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(this.state.Searchfield.toLowerCase());\n    })\n    if(this.state.robots.length === 0){\n      return(\n        <h1 className='tc'>Loading ... </h1>\n      );\n    }\n    else{\n      return(\n          <div className='tc'>\n            <h1><span className='dark-red'>RoboFriends</span></h1>\n            {/*<br/>*/}\n            <SearchBox searchChange={this.onSearchChange}/>\n            <br/>\n            <Scroll className='ma10 pa5'>\n              <ErrorBoundary>\n                <CardList robots={robotsFilter}/>\n              </ErrorBoundary>\n            </Scroll>\n          </div>\n        );\n    }\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// // import Card from './Card';\n// import CardList from './CardList';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}